services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - SA_PASSWORD=${DB_SA_PASSWORD}
    ports:
      - "1433:1433"
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${DB_SA_PASSWORD}", "-C", "-Q", "SELECT 1" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 40s

  # Vehicle Database Migrator
  vehicle-db-migrator:
    build:
      context: .
      dockerfile: src/Vehicle/Vehicle.Db/Dockerfile
    depends_on:
      sql-server:
        condition: service_healthy
    environment:
      - DB_SA_PASSWORD=${DB_SA_PASSWORD}
      - 'ConnectionStrings__Default=Server=sql-server,1433;Database=Vehicle;User Id=sa;Password=;Encrypt=True;TrustServerCertificate=True;Connect Timeout=60'

  # Insurance Database Migrator
  insurance-db-migrator:
    build:
      context: .
      dockerfile: src/Insurance/Insurance.Db/Dockerfile
    depends_on:
      sql-server:
        condition: service_healthy
    environment:
      - DB_SA_PASSWORD=${DB_SA_PASSWORD}
      - 'ConnectionStrings__Default=Server=sql-server,1433;Database=Insurance;User Id=sa;Password=;Encrypt=True;TrustServerCertificate=True;Connect Timeout=60'

  # Vehicle Service
  vehicle-service:
    build:
      context: .
      dockerfile: src/Vehicle/Vehicle.Service/Dockerfile
      target: dev
    ports:
      - "5081:8080"
    environment:
      - DB_SA_PASSWORD=${DB_SA_PASSWORD}
      - 'ConnectionStrings__Default=Server=sql-server,1433;Database=Vehicle;User Id=sa;Password=;Encrypt=True;TrustServerCertificate=True;Connect Timeout=60'
      - Authentication__ApiKey=${Authentication__ApiKey}
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - DISABLE_HTTPS_REDIRECTION=true
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8080/healthz || exit 1" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 3s

  # Insurance Service
  insurance-service:
    build:
      context: .
      dockerfile: src/Insurance/Insurance.Service/Dockerfile
      target: dev
    ports:
      - "5082:8080"
    depends_on:
      insurance-db-migrator:
        condition: service_completed_successfully
      vehicle-service:
        condition: service_healthy
    environment:
      - DB_SA_PASSWORD=${DB_SA_PASSWORD}
      - 'ConnectionStrings__Default=Server=sql-server,1433;Database=Insurance;User Id=sa;Password=;Encrypt=True;TrustServerCertificate=True;Connect Timeout=60'
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - DISABLE_HTTPS_REDIRECTION=true
      - Vehicle.Service.Client__ApiKey=${Vehicle__Service__Client__ApiKey}
      - Vehicle.Service.Client__BaseUrl=http://vehicle-service:8080
      - Authentication__ApiKey=${Authentication__ApiKey}
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8080/healthz || exit 1" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 3s
