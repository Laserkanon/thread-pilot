name: ci
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: "${{ secrets.SA_PASSWORD }}"
        ports: ["1433:1433"]
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -C -Q 'SELECT 1'"
          --health-interval 10s --health-timeout 5s --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build
        run: dotnet build -c Release

      - name: Apply Vehicle DB Migrations
        working-directory: ./src/Vehicle/Vehicle.Db
        env:
          DB_SA_PASSWORD: ${{secrets.SA_PASSWORD}}
        run: dotnet run --configuration Release

      - name: Apply Insurance DB Migrations
        env:
          DB_SA_PASSWORD: ${{secrets.SA_PASSWORD}}
        working-directory: ./src/Insurance/Insurance.Db
        run: dotnet run --configuration Release

      - name: Run Unit Tests
        run: |
          dotnet test ./src/Insurance/Insurance.UnitTests/Insurance.UnitTests.csproj -c Release --no-build --collect:"XPlat Code Coverage"
          dotnet test ./src/Vehicle/Vehicle.UnitTests/Vehicle.UnitTests.csproj -c Release --no-build --collect:"XPlat Code Coverage"

      - name: Run Insurance Integration Tests
        env:
          DB_SA_PASSWORD: ${{secrets.SA_PASSWORD}}
        run: dotnet test ./src/Insurance/Insurance.IntegrationTests/Insurance.IntegrationTests.csproj -c Release --no-build --collect:"XPlat Code Coverage"

      - name: Run Vehicle Integration Tests
        env:
          DB_SA_PASSWORD: ${{secrets.SA_PASSWORD}}
        run: dotnet test ./src/Vehicle/Vehicle.IntegrationTests/Vehicle.IntegrationTests.csproj -c Release --no-build --collect:"XPlat Code Coverage"

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Merge and generate coverage report
        run: |
          reportgenerator \
            -reports:"**/TestResults/*/coverage.cobertura.xml" \
            -targetdir:"coverage" \
            -reporttypes:"Html;Cobertura"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./coverage/

  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      tag_suffix: ${{ steps.version.outputs.tag_suffix }}
    steps:
      - name: Generate version suffix for feature branches
        id: version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag_suffix=" >> $GITHUB_OUTPUT
            exit 0
          fi
          BRANCH_NAME="${GITHUB_REF_NAME:-$(echo "$GITHUB_REF" | sed 's#.*/##')}"
          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's/[^0-9a-z-]/-/g; s/-\{2,\}/-/g; s/^-//; s/-$//' | cut -c1-30)
          echo "tag_suffix=feat-${SANITIZED_BRANCH}.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

  publish-packages:
    runs-on: ubuntu-latest
    needs: [build-test, calculate-version]
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Check for changes in contracts
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            contracts:
              - 'src/Insurance/Insurance.Service.Contracts/**'
              - 'src/Vehicle/Vehicle.Service.Contracts/**'

      - name: Pack and Push Main Branch Version
        if: github.ref == 'refs/heads/main' && steps.changes.outputs.contracts == 'true'
        run: |
          dotnet pack src/Insurance/Insurance.Service.Contracts/Insurance.Service.Contracts.csproj -c Release -o ./packages
          dotnet pack src/Vehicle/Vehicle.Service.Contracts/Vehicle.Service.Contracts.csproj -c Release -o ./packages
          dotnet nuget push "./packages/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Pack and Push Feature Branch Version
        if: github.ref != 'refs/heads/main' && steps.changes.outputs.contracts == 'true'
        run: |
          PKG_SUFFIX="${{ needs.calculate-version.outputs.tag_suffix }}"

          # Vehicle.Service.Contracts
          VEHICLE_BASE_VERSION=$(sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p' \
            src/Vehicle/Vehicle.Service.Contracts/Vehicle.Service.Contracts.csproj | tr -d '[:space:]')
          VEHICLE_VERSION="${VEHICLE_BASE_VERSION}-${PKG_SUFFIX}"
          echo "Packing Vehicle.Service.Contracts version $VEHICLE_VERSION"
          dotnet pack src/Vehicle/Vehicle.Service.Contracts/Vehicle.Service.Contracts.csproj \
            -c Release /p:PackageVersion="$VEHICLE_VERSION" -o ./packages

          # Insurance.Service.Contracts
          INSURANCE_BASE_VERSION=$(sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p' \
            src/Insurance/Insurance.Service.Contracts/Insurance.Service.Contracts.csproj | tr -d '[:space:]')
          INSURANCE_VERSION="${INSURANCE_BASE_VERSION}-${PKG_SUFFIX}"
          echo "Packing Insurance.Service.Contracts version $INSURANCE_VERSION"
          dotnet pack src/Insurance/Insurance.Service.Contracts/Insurance.Service.Contracts.csproj \
            -c Release /p:PackageVersion="$INSURANCE_VERSION" -o ./packages

          # Push all
          dotnet nuget push "./packages/*.nupkg" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

  publish-images:
    runs-on: ubuntu-latest
    needs: [build-test, calculate-version]
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in services
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            vehicle_service:
              - 'src/Vehicle/Vehicle.Service/**'
              - 'src/Vehicle/Vehicle.Service.Contracts/**'
            insurance_service:
              - 'src/Insurance/Insurance.Service/**'
              - 'src/Insurance/Insurance.Service.Contracts/**'
              - 'src/Vehicle/Vehicle.Service.Contracts/**'

      - name: Log in to GitHub Container Registry
        if: steps.changes.outputs.vehicle_service == 'true' || steps.changes.outputs.insurance_service == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate image tags
        id: tags
        run: |
          IMAGE_PREFIX="ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/${{ github.event.repository.name }}"

          # Main branch tags
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            VEHICLE_TAGS="${IMAGE_PREFIX}/vehicle-service:latest,${IMAGE_PREFIX}/vehicle-service:${{ github.sha }}"
            INSURANCE_TAGS="${IMAGE_PREFIX}/insurance-service:latest,${IMAGE_PREFIX}/insurance-service:${{ github.sha }}"
            echo "vehicle_tags=${VEHICLE_TAGS}" >> $GITHUB_OUTPUT
            echo "insurance_tags=${INSURANCE_TAGS}" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Feature branch tags
          TAG_SUFFIX="${{ needs.calculate-version.outputs.tag_suffix }}"
          VEHICLE_TAGS="${IMAGE_PREFIX}/vehicle-service:${TAG_SUFFIX}"
          INSURANCE_TAGS="${IMAGE_PREFIX}/insurance-service:${TAG_SUFFIX}"
          echo "vehicle_tags=${VEHICLE_TAGS}" >> $GITHUB_OUTPUT
          echo "insurance_tags=${INSURANCE_TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push Vehicle.Service image
        if: steps.changes.outputs.vehicle_service == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/Vehicle/Vehicle.Service/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.vehicle_tags }}

      - name: Build and push Insurance.Service image
        if: steps.changes.outputs.insurance_service == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/Insurance/Insurance.Service/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.insurance_tags }}
